/*
 * AddJobWindow.java
 *
 * Created on 21-Nov-2011, 10:16:09
 */
package eesa.gui.windows;

import com.whiuk.philip.eesa.core.Job;
import com.whiuk.philip.eesa.core.Simulation;
import com.whiuk.philip.eesa.exceptions.TimeIntervalException;
import eesa.gui.help.HelpManager;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.LayoutStyle;
import javax.swing.SwingConstants;
import javax.swing.WindowConstants;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 * Controls the "Add Job" window allowing
 * users to add single jobs to the Simulation.
 * @author Philip
 */
public class AddJobWindow extends JFrame {
    /**
     * 
     */
    private static final long serialVersionUID = 1L;
    /**
     * 
     */
    private final Simulation simulation;

    /** Creates new AddJobWindow form.
     * @param s simulation 
     */
    public AddJobWindow(final Simulation s) {
        this.simulation = s;
        initComponents();
        HelpManager.addHelpForClassToButton(helpButton, AddJobWindow.class);
        deadlineField.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(final DocumentEvent e) {
                deadlineUpdated();
            }
            @Override
            public void removeUpdate(final DocumentEvent e) {
                deadlineUpdated();
            }
            @Override
            public void changedUpdate(final DocumentEvent e) {
                deadlineUpdated();
            }
        });
        releaseField.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(final DocumentEvent e) {
                releaseUpdated();
            }
            @Override
            public void removeUpdate(final DocumentEvent e) {
                releaseUpdated();
            }
            @Override
            public void changedUpdate(final DocumentEvent e) {
                releaseUpdated();
            }
        });
        weightField.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(final DocumentEvent e) {
                weightUpdated();
            }
            @Override
            public void removeUpdate(final DocumentEvent e) {
                weightUpdated();
            }
            @Override
            public void changedUpdate(final DocumentEvent e) {
                weightUpdated();
            }
        });
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
    	createFields();
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        jLabel1.setFont(new java.awt.Font("Tahoma", 1,
        		eesa.gui.Application.HEADING_FONT_SIZE)); // NOI18N
        jLabel1.setText("Add Job");
        releaseLabel.setText("Release Time");
        deadlineLabel.setText("Deadline Time");
        weightLabel.setText("Weight");
        densityLabel.setText("Density");
        densityResultLabel.setHorizontalAlignment(SwingConstants.RIGHT);
        densityResultLabel.setText("0");
        releaseField.setHorizontalAlignment(JTextField.RIGHT);
        releaseField.setText("0");
        deadlineField.setHorizontalAlignment(JTextField.RIGHT);
        deadlineField.setText("0");
        deadlineField.addActionListener(new ActionListener() {
            public void actionPerformed(final ActionEvent evt) {
                deadlineFieldActionPerformed(evt);
            }
        });
        weightField.setHorizontalAlignment(JTextField.RIGHT);
        weightField.setText("0");
        submitButton.setText("Submit");
        submitButton.addActionListener(new ActionListener() {
            public void actionPerformed(final ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });
        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new ActionListener() {
            public void actionPerformed(final ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        lengthLabel.setText("Length");
        lengthResultLabel.setHorizontalAlignment(SwingConstants.RIGHT);
        lengthResultLabel.setText("0");
        helpButton.setText("Help");
        buildLayout();
        pack();
    }
    /**
     * 
     */
    private void buildLayout() {
        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);        
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(
                		GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(
                        		GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(submitButton)
                                .addPreferredGap(
                                		LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cancelButton)
                                .addPreferredGap(
                                		LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(helpButton))
                            .addComponent(lengthLabel,
                            		GroupLayout.PREFERRED_SIZE,
                            		96,
                            		GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(
                        		GroupLayout.Alignment.TRAILING,
                        		false)
                            .addComponent(densityLabel,
                            		GroupLayout.DEFAULT_SIZE,
                            		GroupLayout.DEFAULT_SIZE,
                            		Short.MAX_VALUE)
                            .addComponent(deadlineLabel,
                            		GroupLayout.Alignment.LEADING,
                            		GroupLayout.DEFAULT_SIZE,
                            		96, Short.MAX_VALUE)
                            .addComponent(releaseLabel,
                            		GroupLayout.Alignment.LEADING,
                            		GroupLayout.DEFAULT_SIZE,
                            		GroupLayout.DEFAULT_SIZE,
                            		Short.MAX_VALUE)
                            .addComponent(weightLabel, GroupLayout.DEFAULT_SIZE,
                            		GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(
                        		GroupLayout.Alignment.LEADING)
                            .addComponent(lengthResultLabel,
                            		GroupLayout.DEFAULT_SIZE,
                            		GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(weightField)
                            .addComponent(deadlineField,
                            		GroupLayout.Alignment.TRAILING)
                            .addComponent(densityResultLabel,
                            		GroupLayout.DEFAULT_SIZE,
                            		GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(releaseField))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(
                		GroupLayout.Alignment.BASELINE)
                    .addComponent(releaseLabel)
                    .addComponent(releaseField,
                    		GroupLayout.PREFERRED_SIZE,
                    		GroupLayout.DEFAULT_SIZE,
                    		GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(
                		GroupLayout.Alignment.BASELINE)
                    .addComponent(deadlineLabel)
                    .addComponent(deadlineField,
                    		GroupLayout.PREFERRED_SIZE,
                    		GroupLayout.DEFAULT_SIZE,
                    		GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(
                		GroupLayout.Alignment.BASELINE)
                    .addComponent(lengthLabel)
                    .addComponent(lengthResultLabel))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(
                		GroupLayout.Alignment.BASELINE)
                    .addComponent(weightField,
                    		GroupLayout.PREFERRED_SIZE,
                    		GroupLayout.DEFAULT_SIZE,
                    		GroupLayout.PREFERRED_SIZE)
                    .addComponent(weightLabel))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(
                		GroupLayout.Alignment.BASELINE)
                    .addComponent(densityLabel)
                    .addComponent(densityResultLabel))
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(
                		GroupLayout.Alignment.BASELINE)
                    .addComponent(submitButton)
                    .addComponent(cancelButton)
                    .addComponent(helpButton))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
	}

	/**
     * 
     */
    private void createFields() {
        jLabel1 = new JLabel();
        releaseLabel = new JLabel();
        deadlineLabel = new JLabel();
        weightLabel = new JLabel();
        densityLabel = new JLabel();
        densityResultLabel = new JLabel();
        releaseField = new JTextField();
        deadlineField = new JTextField();
        weightField = new JTextField();
        submitButton = new JButton();
        cancelButton = new JButton();
        lengthLabel = new JLabel();
        lengthResultLabel = new JLabel();
        helpButton = new JButton();
	}

	/**
     * 
     * @param evt event
     */
    private void deadlineFieldActionPerformed(final ActionEvent evt) {
    }
    
    /**
     * 
     * @param evt event
     */
    private void submitButtonActionPerformed(final ActionEvent evt) {
        try {
            simulation.getJobSet().addJob(
                    new Job(simulation.getJobSet().getNextJobID(),
                        Float.parseFloat(this.releaseField.getText()),
                        Float.parseFloat(this.deadlineField.getText()),
                        Float.parseFloat(this.weightField.getText()))
                    );
            setVisible(false);
            dispose();
        } catch (TimeIntervalException ex) {
            Logger.getLogger(AddJobWindow.class.getName())
            	.log(Level.INFO, null, ex);
            JOptionPane.showMessageDialog(rootPane, "Time Error",
            		ex.getMessage(),
            		JOptionPane.ERROR_MESSAGE);
        }
    }
    
    /**
     * 
     * @param evt event
     */
    private void cancelButtonActionPerformed(final ActionEvent evt) {
        setVisible(false);
        dispose();
    }
    /**
     * 
     */
    private void lengthUpdate() {
        float deadline, release;
        try { 
            deadline = Long.parseLong(deadlineField.getText());
        } catch (NumberFormatException ex) {
            deadline = 0;
        }
        try { 
            release = Long.parseLong(releaseField.getText());
        } catch (NumberFormatException ex) {
            release = 0;
        }        
        lengthResultLabel.setText("" + (deadline - release));
    }
    /**
     * 
     */
    private void densityUpdate() {
        float deadline, release, weight;
        try { 
            deadline = Long.parseLong(deadlineField.getText());
        } catch (NumberFormatException ex) {
            deadline = 0;
        }
        try { 
            release = Long.parseLong(releaseField.getText());
        } catch (NumberFormatException ex) {
            release = 0;
        }
        try { 
            weight = Long.parseLong(weightField.getText());
        } catch (NumberFormatException ex) {
            weight = 0;
        }
        if ((deadline - release) == 0) {
            densityResultLabel.setText("NaN");
        } else {
            densityResultLabel.setText("" + (weight / (deadline - release)));
        }
        
        
    }
    /**
     * 
     */
    private void deadlineUpdated() {        
        lengthUpdate();
        densityUpdate();
    }
    /**
     * 
     */
    private void releaseUpdated() {
        lengthUpdate();
        densityUpdate();        
    }
    /**
     * 
     */
    private void weightUpdated() {
        densityUpdate();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    /**
     * 
     */
    private JButton cancelButton;
    /**
     * 
     */
    private JTextField deadlineField;
    /**
     * 
     */
    private JLabel deadlineLabel;
    /**
     * 
     */
    private JLabel densityLabel;
    /**
     * 
     */
    private JLabel densityResultLabel;
    /**
     * 
     */
    private JButton helpButton;
    /**
     * 
     */
    private JLabel jLabel1;
    /**
     * 
     */
    private JLabel lengthLabel;
    /**
     * 
     */
    private JLabel lengthResultLabel;
    /**
     * 
     */
    private JTextField releaseField;
    /**
     * 
     */
    private JLabel releaseLabel;
    /**
     * 
     */
    private JButton submitButton;
    /**
     * 
     */
    private JTextField weightField;
    /**
     * 
     */
    private JLabel weightLabel;
    // End of variables declaration//GEN-END:variables
}
