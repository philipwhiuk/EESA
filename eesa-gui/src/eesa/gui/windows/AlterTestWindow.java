
/*
 * AlterTestWindow.java
 *
 * Created on 04-Apr-2012, 10:17:48
 */
package eesa.gui.windows;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import com.whiuk.philip.eesa.algorithms.AssignmentAndScalingAlgorithm;
import com.whiuk.philip.eesa.algorithms.JobAssignmentAlgorithm;
import com.whiuk.philip.eesa.algorithms.SpeedScalingAlgorithm;
import com.whiuk.philip.eesa.core.Test;
import eesa.gui.help.HelpManager;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;

/**
 * Allows users to alter a test.
 * @author Philip
 */
public class AlterTestWindow extends javax.swing.JFrame {
    /**
     * 
     */
    private static final long serialVersionUID = 1L;
    /**
     * 
     */
    private final Test test;

    /** Creates new form AlterTestWindow.
     * @param t 
     */
    public AlterTestWindow(final Test t) {
        test = t;
        initComponents();    
        HelpManager.addHelpForClassToButton(helpButton, AlterTestWindow.class);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {

        cancelButton = new javax.swing.JButton();
        header = new javax.swing.JLabel();
        speedScalingAlgorithmLabel = new javax.swing.JLabel();
        jobAssignmentAlgorithmLabel = new javax.swing.JLabel();
        speedScalingAlgorithmComboBox = new javax.swing.JComboBox<SpeedScalingAlgorithm>();
        jobAssignmentAlgorithmComboBox = new javax.swing.JComboBox<JobAssignmentAlgorithm>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jobAssignmentAlgorithmDescriptionTextArea = new javax.swing.JTextArea();
        addTestButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        speedScalingAlgorithmDescriptionTextArea = new javax.swing.JTextArea();
        helpButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new ActionListener() {
            public void actionPerformed(final ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        header.setFont(new java.awt.Font("Tahoma", 1, eesa.gui.Application.HEADING_FONT_SIZE)); // NOI18N
        header.setText("Alter Test");

        speedScalingAlgorithmLabel.setText("Speed Scaling Algorithm");

        jobAssignmentAlgorithmLabel.setText("Job Assignment Algorithm");

        speedScalingAlgorithmComboBox.setModel(getSpeedScalingAlgorithmsComboBoxModel());
        speedScalingAlgorithmComboBox.setSelectedItem(((AssignmentAndScalingAlgorithm) test.getAlgorithm()).getSSA());
        speedScalingAlgorithmComboBox.addActionListener(new ActionListener() {
            public void actionPerformed(final ActionEvent evt) {
                speedScalingAlgorithmComboBoxActionPerformed(evt);
            }
        });

        jobAssignmentAlgorithmComboBox.setModel(getJobAssignmentAlgorithmsComboBoxModel());
        jobAssignmentAlgorithmComboBox.setSelectedItem(((AssignmentAndScalingAlgorithm) test.getAlgorithm()).getJAA());
        jobAssignmentAlgorithmComboBox.addActionListener(new ActionListener() {
            public void actionPerformed(final ActionEvent evt) {
                jobAssignmentAlgorithmComboBoxActionPerformed(evt);
            }
        });

        jobAssignmentAlgorithmDescriptionTextArea.setColumns(20);
        jobAssignmentAlgorithmDescriptionTextArea.setEditable(false);
        jobAssignmentAlgorithmDescriptionTextArea.setFont(new java.awt.Font("Arial", 0, eesa.gui.Application.FONT_SIZE)); // NOI18N
        jobAssignmentAlgorithmDescriptionTextArea.setLineWrap(true);
        jobAssignmentAlgorithmDescriptionTextArea.setRows(5);
        jobAssignmentAlgorithmDescriptionTextArea.setWrapStyleWord(true);
        jScrollPane1.setViewportView(jobAssignmentAlgorithmDescriptionTextArea);

        addTestButton.setText("Submit");
        addTestButton.addActionListener(new ActionListener() {
            public void actionPerformed(final ActionEvent evt) {
                addTestButtonActionPerformed(evt);
            }
        });

        speedScalingAlgorithmDescriptionTextArea.setColumns(20);
        speedScalingAlgorithmDescriptionTextArea.setEditable(false);
        speedScalingAlgorithmDescriptionTextArea.setFont(new java.awt.Font("Arial", 0, eesa.gui.Application.FONT_SIZE)); // NOI18N
        speedScalingAlgorithmDescriptionTextArea.setLineWrap(true);
        speedScalingAlgorithmDescriptionTextArea.setRows(5);
        speedScalingAlgorithmDescriptionTextArea.setWrapStyleWord(true);
        jScrollPane2.setViewportView(speedScalingAlgorithmDescriptionTextArea);

        helpButton.setText("Help");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(header)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(addTestButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(cancelButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(helpButton))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jobAssignmentAlgorithmLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jobAssignmentAlgorithmComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(speedScalingAlgorithmLabel)
                            .addGap(8, 8, 8)
                            .addComponent(speedScalingAlgorithmComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(header)
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jobAssignmentAlgorithmLabel)
                    .addComponent(jobAssignmentAlgorithmComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(speedScalingAlgorithmLabel)
                    .addComponent(speedScalingAlgorithmComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addTestButton)
                    .addComponent(cancelButton)
                    .addComponent(helpButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }
    /**
     * 
     * @param evt
     */
    private void cancelButtonActionPerformed(final ActionEvent evt) {
        setVisible(false);
        dispose();
    }
    /**
     * 
     * @param evt
     */
    private void speedScalingAlgorithmComboBoxActionPerformed(final ActionEvent evt) {
        SpeedScalingAlgorithm selected = (SpeedScalingAlgorithm) speedScalingAlgorithmComboBox.getSelectedItem();
        speedScalingAlgorithmDescriptionTextArea.setText(selected.getDescription());
        speedScalingAlgorithmDescriptionTextArea.setCaretPosition(0);
    }
    /**
     * 
     * @param evt
     */
    private void jobAssignmentAlgorithmComboBoxActionPerformed(final ActionEvent evt) {
        JobAssignmentAlgorithm selected = (JobAssignmentAlgorithm) jobAssignmentAlgorithmComboBox.getSelectedItem();
        jobAssignmentAlgorithmDescriptionTextArea.setText(selected.getDescription());
        jobAssignmentAlgorithmDescriptionTextArea.setCaretPosition(0);
    }
    /**
     * 
     * @param evt
     */
    private void addTestButtonActionPerformed(final ActionEvent evt) {
        ((AssignmentAndScalingAlgorithm) test.getAlgorithm()).setJAA((JobAssignmentAlgorithm) jobAssignmentAlgorithmComboBox.getSelectedItem());
        ((AssignmentAndScalingAlgorithm) test.getAlgorithm()).setSSA((SpeedScalingAlgorithm) speedScalingAlgorithmComboBox.getSelectedItem());
        setVisible(false);
        dispose();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    /**
     * 
     */
    private javax.swing.JButton addTestButton;
    /**
     * 
     */
    private javax.swing.JButton cancelButton;
    /**
     * 
     */
    private javax.swing.JLabel header;
    /**
     * 
     */
    private javax.swing.JButton helpButton;
    /**
     * 
     */
    private javax.swing.JScrollPane jScrollPane1;
    /**
     * 
     */
    private javax.swing.JScrollPane jScrollPane2;
    /**
     * 
     */
    private javax.swing.JComboBox<JobAssignmentAlgorithm> jobAssignmentAlgorithmComboBox;
    /**
     * 
     */
    private javax.swing.JTextArea jobAssignmentAlgorithmDescriptionTextArea;
    /**
     * 
     */
    private javax.swing.JLabel jobAssignmentAlgorithmLabel;
    /**
     * 
     */
    private javax.swing.JComboBox<SpeedScalingAlgorithm> speedScalingAlgorithmComboBox;
    /**
     * 
     */
    private javax.swing.JTextArea speedScalingAlgorithmDescriptionTextArea;
    /**
     * 
     */
    private javax.swing.JLabel speedScalingAlgorithmLabel;
    // End of variables declaration//GEN-END:variables
    /**
     * 
     * @return 
     */
    private ComboBoxModel<JobAssignmentAlgorithm> getJobAssignmentAlgorithmsComboBoxModel() {
        ComboBoxModel<JobAssignmentAlgorithm> m = new DefaultComboBoxModel<JobAssignmentAlgorithm>(AssignmentAndScalingAlgorithm.getJobAssignmentAlgorithms());
        jobAssignmentAlgorithmDescriptionTextArea.setText(((JobAssignmentAlgorithm) m.getSelectedItem()).getDescription());
        jobAssignmentAlgorithmDescriptionTextArea.setCaretPosition(0);
        return m;
        
    }
    /**
     * 
     * @return 
     */
    private ComboBoxModel<SpeedScalingAlgorithm> getSpeedScalingAlgorithmsComboBoxModel() {
        ComboBoxModel<SpeedScalingAlgorithm> m = new DefaultComboBoxModel<SpeedScalingAlgorithm>(AssignmentAndScalingAlgorithm.getSpeedScalingAlgorithms());
        speedScalingAlgorithmDescriptionTextArea.setText(((SpeedScalingAlgorithm) m.getSelectedItem()).getDescription());
        speedScalingAlgorithmDescriptionTextArea.setCaretPosition(0);
        return m;
    }
}
