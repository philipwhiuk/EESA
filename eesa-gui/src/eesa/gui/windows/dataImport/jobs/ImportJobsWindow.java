/*
 * ImportJobsWindow.java
 *
 * Created on 25-Mar-2012, 19:12:03
 */
package eesa.gui.windows.dataImport.jobs;

import com.whiuk.philip.eesa.dataImport.JobDataImport;
import eesa.gui.Application;
import eesa.gui.PluginConnector;
import eesa.gui.help.HelpManager;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;

/**
 * Provides importer selection of jobs.
 * @author Philip
 */
public class ImportJobsWindow extends javax.swing.JFrame {
    /**
     * 
     */
    private static final long serialVersionUID = 1L;
    /**
     * 
     */
    private JobDataImport data;
    /**
     * 
     */
    private ArrayList<PluginConnector> validConnectors;

    /** Creates new form ImportJobsWindow. */
    public ImportJobsWindow() {
        getValidConnectors();        
        initComponents();
        HelpManager.addHelpForClassToButton(helpButton, ImportJobsWindow.class);
    }
    /**
     * 
     * @param data 
     */
    public ImportJobsWindow(final JobDataImport data) {
        this();
        this.data = data;
        setInitialSelection();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {
    	createFields();
        jLabel3.setFont(new java.awt.Font("Tahoma", 1, eesa.gui.Application.STEP_FONT_SIZE)); // NOI18N
        jLabel3.setText("1. Select Source");
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Import Jobs");
        backButton.setText("Back");
        backButton.setEnabled(false);
        backButton.addActionListener(new ActionListener() {
            public void actionPerformed(final ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        helpButton.setText("Help");
        helpButton.addActionListener(new ActionListener() {
            public void actionPerformed(final ActionEvent evt) {
                helpButtonActionPerformed(evt);
            }
        });
        stepsPanel.setBackground(new java.awt.Color(255, 255, 255));
        stepsTitle.setFont(new java.awt.Font("Tahoma", 1, eesa.gui.Application.STEP_FONT_SIZE)); // NOI18N
        stepsTitle.setText("Steps");
        step1.setFont(new java.awt.Font("Tahoma", 1, eesa.gui.Application.STEP_FONT_SIZE)); // NOI18N
        step1.setText("1. Select Type");
        step2.setText("2. ...");
        javax.swing.GroupLayout stepsPanelLayout = new javax.swing.GroupLayout(stepsPanel);
        stepsPanel.setLayout(stepsPanelLayout);
        stepsPanelLayout.setHorizontalGroup(
            stepsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(stepsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(stepsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(stepsTitle)
                    .addComponent(step1)
                    .addComponent(step2))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        stepsPanelLayout.setVerticalGroup(
            stepsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(stepsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(stepsTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(step1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(step2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        nextButton.setText("Next");
        nextButton.setEnabled(false);
        nextButton.addActionListener(new ActionListener() {
            public void actionPerformed(final ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });
        finishButton.setText("Finish");
        finishButton.setEnabled(false);
        finishButton.addActionListener(new ActionListener() {
            public void actionPerformed(final ActionEvent evt) {
                finishButtonActionPerformed(evt);
            }
        });
        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new ActionListener() {
            public void actionPerformed(final ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        heading.setFont(new java.awt.Font("Tahoma", 1, eesa.gui.Application.HEADING_FONT_SIZE)); // NOI18N
        heading.setText("Select Type");
        jobAssignmentAlgorithmLabel.setText("Type");
        formatComboBox.setModel(getPluginConnectorsComboBoxModel());
        formatComboBox.addActionListener(new ActionListener() {
            public void actionPerformed(final ActionEvent evt) {
                formatComboBoxActionPerformed(evt);
            }
        });
        formatDescriptionTextArea.setColumns(20);
        formatDescriptionTextArea.setEditable(false);
        formatDescriptionTextArea.setFont(new java.awt.Font("Arial", 0, eesa.gui.Application.FONT_SIZE)); // NOI18N
        formatDescriptionTextArea.setLineWrap(true);
        formatDescriptionTextArea.setRows(5);
        formatDescriptionTextArea.setWrapStyleWord(true);
        jScrollPane1.setViewportView(formatDescriptionTextArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(stepsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(heading)
                                .addGap(0, 276, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jobAssignmentAlgorithmLabel)
                                .addGap(18, 18, 18)
                                .addComponent(formatComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nextButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(finishButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(helpButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(stepsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(heading)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jobAssignmentAlgorithmLabel)
                            .addComponent(formatComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 32, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(helpButton)
                    .addComponent(backButton)
                    .addComponent(nextButton)
                    .addComponent(finishButton)
                    .addComponent(cancelButton))
                .addContainerGap())
        );

        pack();
    }
    /**
     * 
     */
    private void createFields() {
        jLabel3 = new javax.swing.JLabel();
        typeButtonGroup = new javax.swing.ButtonGroup();
        backButton = new javax.swing.JButton();
        helpButton = new javax.swing.JButton();
        stepsPanel = new javax.swing.JPanel();
        stepsTitle = new javax.swing.JLabel();
        step1 = new javax.swing.JLabel();
        step2 = new javax.swing.JLabel();
        nextButton = new javax.swing.JButton();
        finishButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        heading = new javax.swing.JLabel();
        jobAssignmentAlgorithmLabel = new javax.swing.JLabel();
        formatComboBox = new javax.swing.JComboBox<PluginConnector>();
        jScrollPane1 = new javax.swing.JScrollPane();
        formatDescriptionTextArea = new javax.swing.JTextArea();
	}
	/**
     * 
     * @param evt Event
     */
    private void nextButtonActionPerformed(final ActionEvent evt) {
        PluginConnector plugin = (PluginConnector) formatComboBox.getSelectedItem();
        if (data != null && data.getClass().equals(plugin.getClass())) {
            plugin.getNewImportJobsWindow(data).setVisible(true);
            dispose();
        } else {
            plugin.getNewImportJobsWindow().setVisible(true);           
            dispose();
        }
    }
    /**
     * 
     * @param evt Event
     */
    private void backButtonActionPerformed(final ActionEvent evt) {
        // Do Nothing
    }
    /**
     * 
     * @param evt Event
     */
    private void finishButtonActionPerformed(final ActionEvent evt) {
        // Do Nothing
    }
    /**
     * 
     * @param evt Event
     */
    private void cancelButtonActionPerformed(final ActionEvent evt) {
        setVisible(false);
        dispose();
    }
    /**
     * 
     * @param evt Event
     */
    private void helpButtonActionPerformed(final ActionEvent evt) {
    }
    /**
     * 
     * @param evt Event
     */
    private void formatComboBoxActionPerformed(final ActionEvent evt) {
        if (formatComboBox.getSelectedIndex() != -1) {
            PluginConnector selected = (PluginConnector) formatComboBox.getSelectedItem();
            formatDescriptionTextArea.setText(selected.getDescription());
            formatDescriptionTextArea.setCaretPosition(0);
            nextButton.setEnabled(true);
        } else {
            formatDescriptionTextArea.setText("");
            formatDescriptionTextArea.setCaretPosition(0);
            nextButton.setEnabled(false);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
	/**
	 * 
	 */
    private javax.swing.JButton backButton;
	/**
	 * 
	 */
    private javax.swing.JButton cancelButton;
	/**
	 * 
	 */
    private javax.swing.JButton finishButton;
	/**
	 * 
	 */
    private javax.swing.JComboBox<PluginConnector> formatComboBox;
	/**
	 * 
	 */
    private javax.swing.JTextArea formatDescriptionTextArea;
	/**
	 * 
	 */
    private javax.swing.JLabel heading;
	/**
	 * 
	 */
    private javax.swing.JButton helpButton;
	/**
	 * 
	 */
    private javax.swing.JLabel jLabel3;
	/**
	 * 
	 */
    private javax.swing.JScrollPane jScrollPane1;
	/**
	 * 
	 */
    private javax.swing.JLabel jobAssignmentAlgorithmLabel;
	/**
	 * 
	 */
    private javax.swing.JButton nextButton;
	/**
	 * 
	 */
    private javax.swing.JLabel step1;
	/**
	 * 
	 */
    private javax.swing.JLabel step2;
	/**
	 * 
	 */
    private javax.swing.JPanel stepsPanel;
	/**
	 * 
	 */
    private javax.swing.JLabel stepsTitle;
	/**
	 * 
	 */
    private javax.swing.ButtonGroup typeButtonGroup;
    // End of variables declaration//GEN-END:variables

    /**
     * 
     */
    private void getValidConnectors() {
        PluginConnector[] connectors = Application.getPluginConnectors();
        validConnectors = new ArrayList<PluginConnector>();
        for (int c = 0; c < connectors.length; c++) {
            if (connectors[c].hasJobDataImportClass()) {
                validConnectors.add(connectors[c]);
            }
        }
    }

    /**
     * 
     */
    private void setInitialSelection() {
        Iterator<PluginConnector> i = validConnectors.iterator();
        while (i.hasNext()) {
            PluginConnector pc = i.next();
            if (pc.getJobDataExportClass().equals(data.getClass())) {
                formatComboBox.setSelectedItem(pc);
            }
        }
    }

    /**
     * 
     * @return
     */
    private ComboBoxModel<PluginConnector> getPluginConnectorsComboBoxModel() {
        ComboBoxModel<PluginConnector> m = new DefaultComboBoxModel<PluginConnector>(validConnectors.toArray(new PluginConnector[]{}));
        formatDescriptionTextArea.setText(((PluginConnector) m.getSelectedItem()).getDescription());
        formatDescriptionTextArea.setCaretPosition(0);
        return m;
    }
}
