package eesa.gui.windows.imageExport.speed;

import eesa.gui.ImageException;
import eesa.gui.windows.AbstractProcessWindow;
import eesa.gui.windows.imageExport.results.OutputExportJobResultsChartWindow;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.LayoutStyle;
import javax.swing.WindowConstants;

import javax.swing.JOptionPane;

/**
 * Allows the user to preview the chart prior to file export.
 * @author Philip
 */
public class OutputExportSpeedChartWindow extends AbstractProcessWindow {
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	/**
	 * Class logger.
	 */
	private static Logger logger =
			Logger.getLogger(OutputExportJobResultsChartWindow.class.getName());
	/**
	 * Export data.
	 */
    private final SpeedImageExport data;

    /**
     * Creates new form OutputExportSpeedChartWindow.
     * @param e data
     */
    public OutputExportSpeedChartWindow(final SpeedImageExport e) {
        this.data = e;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void initComponents() {
        cancelButton = new JButton();
        stepsPanel = new JPanel();
        stepsTitle = new JLabel();
        step1 = new JLabel();
        step2 = new JLabel();
        jLabel1 = new JLabel();
        jLabel2 = new JLabel();
        helpButton = new JButton();
        finishButton = new JButton();
        nextButton = new JButton();
        heading = new JLabel();
        chartCanvasPanel = new JPanel();
        backButton = new JButton();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new ActionListener() {
            public void actionPerformed(final ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        stepsPanel.setBackground(new java.awt.Color(255, 255, 255));

        stepsTitle.setFont(new java.awt.Font("Tahoma", 1, eesa.gui.Application.STEP_FONT_SIZE)); // NOI18N
        stepsTitle.setText("Steps");

        step1.setFont(new java.awt.Font("Tahoma", 2, eesa.gui.Application.STEP_FONT_SIZE)); // NOI18N
        step1.setText("1. Select Sources");

        step2.setFont(new java.awt.Font("Tahoma", 2, eesa.gui.Application.STEP_FONT_SIZE)); // NOI18N
        step2.setText("2. Select Chart Split Type");

        jLabel1.setFont(new java.awt.Font("Tahoma", 2, eesa.gui.Application.STEP_FONT_SIZE)); // NOI18N
        jLabel1.setText("3. Select Destination");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, eesa.gui.Application.STEP_FONT_SIZE)); // NOI18N
        jLabel2.setText("4. View Output");
        buildStepsPanelLayout();


        helpButton.setText("Help");
        helpButton.addActionListener(new ActionListener() {
            public void actionPerformed(final ActionEvent evt) {
                helpButtonActionPerformed(evt);
            }
        });

        finishButton.setText("Finish");
        finishButton.setEnabled(false);
        finishButton.addActionListener(new ActionListener() {
            public void actionPerformed(final ActionEvent evt) {
                finishButtonActionPerformed(evt);
            }
        });

        nextButton.setText("Next");
        nextButton.setEnabled(false);
        nextButton.addActionListener(new ActionListener() {
            public void actionPerformed(final ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });

        heading.setFont(new java.awt.Font("Tahoma", 1, eesa.gui.Application.HEADING_FONT_SIZE)); // NOI18N
        heading.setText("View Output");

        chartCanvasPanel.setBorder(
        		BorderFactory.createLineBorder(
        				new java.awt.Color(0, 0, 0)));

        GroupLayout chartCanvasPanelLayout = 
        		new GroupLayout(chartCanvasPanel);
        chartCanvasPanel.setLayout(chartCanvasPanelLayout);
        chartCanvasPanelLayout.setHorizontalGroup(
            chartCanvasPanelLayout.createParallelGroup(
            		GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        chartCanvasPanelLayout.setVerticalGroup(
            chartCanvasPanelLayout.createParallelGroup(
            		GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        backButton.setText("Back");
        backButton.setEnabled(false);
        backButton.addActionListener(new ActionListener() {
            public void actionPerformed(final ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        buildLayout();
        pack();
    }
    /**
     * Steps panel layout builder.
     */
    private void buildStepsPanelLayout() {
        GroupLayout stepsPanelLayout = new GroupLayout(stepsPanel);
        stepsPanel.setLayout(stepsPanelLayout);
        stepsPanelLayout.setHorizontalGroup(
            stepsPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(stepsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(stepsPanelLayout.createParallelGroup(
                		GroupLayout.Alignment.LEADING)
                    .addComponent(stepsTitle)
                    .addComponent(step2)
                    .addComponent(step1)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        stepsPanelLayout.setVerticalGroup(
            stepsPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(stepsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(stepsTitle)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(step1)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(step2)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addContainerGap(155, Short.MAX_VALUE))
        );    	
    }
    /**
     * Layout builder.
     */
    private void buildLayout() {
        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(
                		GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(stepsPanel,
                        		GroupLayout.PREFERRED_SIZE,
                        		GroupLayout.DEFAULT_SIZE,
                        		GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(
                        		LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(
                        		GroupLayout.Alignment.LEADING)
                            .addComponent(chartCanvasPanel,
                            		GroupLayout.DEFAULT_SIZE,
                            		GroupLayout.DEFAULT_SIZE,
                            		Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(heading)
                                .addGap(0, 285, Short.MAX_VALUE))))
                    .addGroup(GroupLayout.Alignment.TRAILING,
                    		layout.createSequentialGroup()
                        .addContainerGap(204, Short.MAX_VALUE)
                        .addComponent(backButton)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nextButton)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(finishButton)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(helpButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(heading)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chartCanvasPanel,
                		GroupLayout.DEFAULT_SIZE,
                		GroupLayout.DEFAULT_SIZE,
                		Short.MAX_VALUE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(
                		GroupLayout.Alignment.BASELINE)
                    .addComponent(helpButton)
                    .addComponent(backButton)
                    .addComponent(nextButton)
                    .addComponent(finishButton)
                    .addComponent(cancelButton))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addComponent(stepsPanel,
                		GroupLayout.DEFAULT_SIZE,
                		GroupLayout.DEFAULT_SIZE,
                		Short.MAX_VALUE)
                .addGap(40, 40, 40))
        );
    }
    /**
     * Reacts to cancel button. 
     * @param evt Click event
     */
    private void cancelButtonActionPerformed(final ActionEvent evt) {
        setVisible(false);
        dispose();
    }
    /**
     * Reacts to help button. 
     * @param evt Click event
     */
    private void helpButtonActionPerformed(final ActionEvent evt) {
    	//GEN-FIRST:event_helpButtonActionPerformed

   }

    /**
     * Reacts to finish button. 
     * @param evt Click event
     */
    private void finishButtonActionPerformed(final ActionEvent evt) {
    	//GEN-FIRST:event_finishButtonActionPerformed
        try {
            exportChart();
            setVisible(false);
            dispose();
        } catch (ImageException ex) {
            logger.log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this,
            		"Image Export Error: " + ex.getMessage(),
            		"Image Export Error", WIDTH);
        }
    }

    /**
     * Reacts to next button. 
     * @param evt Click event
     */
    private void nextButtonActionPerformed(final ActionEvent evt) {
    	//GEN-FIRST:event_nextButtonActionPerformed
        // Do Nothing
    }

    /**
     * Reacts to back button. 
     * @param evt Click event
     */
    private void backButtonActionPerformed(final ActionEvent evt) {
    	//GEN-FIRST:event_backButtonActionPerformed
        // Do Nothing
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    /**
     * Back button.
     */
    private JButton backButton;
    /**
     * Cancel button.
     */
    private JButton cancelButton;
    /**
     * Chart canvas.
     */
    private JPanel chartCanvasPanel;
    /**
     * Finish button.
     */
    private JButton finishButton;
    /**
     * Heading.
     */
    private JLabel heading;
    /**
     * Help button.
     */
    private JButton helpButton;
    /**
     * Label.
     */
    private JLabel jLabel1;
    /**
     * Label.
     */
    private JLabel jLabel2;
    /**
     * Next button.
     */
    private JButton nextButton;
    /**
     * Step 1 label.
     */
    private JLabel step1;
    /**
     * Step 2 label.
     */
    private JLabel step2;
    /**
     * Steps panel.
     */
    private JPanel stepsPanel;
    /**
     * Steps title.
     */
    private JLabel stepsTitle;
    // End of variables declaration//GEN-END:variables
    /**
     * Chart export action.
     * @throws ImageException Image exception
     */
    private void exportChart() throws ImageException {
        data.performExport();
    }
}
